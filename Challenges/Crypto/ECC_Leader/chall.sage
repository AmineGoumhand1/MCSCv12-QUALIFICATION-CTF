from Crypto.Util.number import  bytes_to_long, long_to_bytes
FLAG="MCSC{fake}"
FLAG1=FLAG[:len(FLAG)//2]
FLAG2=FLAG[len(FLAG)//2:]
from secret import a, b, p
Zp = Zmod(p)
E = EllipticCurve(Zp, [a, b])

def genPoints():
    return E.gen(0)

p1=genPoints()
p2,q1=E.random_element(),bytes_to_long(FLAG1.encode())*p1
q2=bytes_to_long(FLAG2.encode())*p2

print(P1,Q1,P2,Q2)

"""
output
(77650672602548383210283289386026869029947367725648008024381673318 : 4144275526774137259094550692790680782759540057177218565247447854 : 1) (85648048429583590470334488124084510843451768285808029699480025933 : 6530144474336537463325819873217365897221258083098943979636079725 : 1) (78525584322080013702671787356805489633406983471965709752407426254 : 42273900786249067248219374168981796588773439727469622810562688495 : 1) (69332810874408201335362865708825414735966642752530491368595380706 : 61806422688700419502397571318480323532421462046722351706005980808 : 1)

"""